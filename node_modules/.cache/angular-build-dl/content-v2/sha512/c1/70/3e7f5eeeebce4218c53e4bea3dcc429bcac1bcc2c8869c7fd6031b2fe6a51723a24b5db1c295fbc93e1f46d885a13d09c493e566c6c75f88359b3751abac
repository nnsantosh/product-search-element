{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.module.ts","webpack:///src/app/models/product.ts","webpack:///src/app/product-search.service.ts","webpack:///src/app/product-search/product-search.component.ts","webpack:///src/app/product-search/product-search.component.html","webpack:///src/environments/environment.prod.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppModule","injector","customProductSearchElement","customElements","define","declarations","imports","providers","Product","ProductSearchService","http","headers","name","productSearchByNameUrl","getProductsServiceUrl","get","pipe","errorHandler","error","alert","JSON","stringify","errorMsg","message","undefined","providedIn","ProductSearchComponent","productSearchService","rowData","selectedProducts","clickMessage","productName","productModel","noresultsMatchingCriteriaMsg","shoppingCartDisplayEventEmitter","getProductsByName","subscribe","data","length","emit","target","checked","push","value","prod","index","findIndex","product","splice","productSearch","addToCart","clearResults","templateUrl","styleUrls","environment","production","serverUrl","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule} from '@angular/forms'; \nimport { NgModule, Injector } from '@angular/core';\nimport {createCustomElement} from '@angular/elements';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductSearchComponent } from './product-search/product-search.component';\n\n@NgModule({\n  declarations: [\n    ProductSearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n \n})\nexport class AppModule { \n  constructor(injector: Injector) {\n    const customProductSearchElement = createCustomElement(ProductSearchComponent,{injector});\n    customElements.define('app-product-search', customProductSearchElement);\n  }\n  ngDoBootstrap() {}\n}\n","export class Product{\n    //constructor(\n    public id:string;\n    public name:string;\n    public seller:string;\n    public categoryName:string;\n    public price:string;\n    public imagePath:string;\n    public creationDate:string;\n\tpublic lastUpdatedDate:string;\n\t//){}\n\n\t\n}","import { Injectable, ErrorHandler} from '@angular/core';\nimport { HttpClient, HttpResponse, HttpErrorResponse, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Product} from './models/product';\nimport { Observable,throwError, BehaviorSubject } from 'rxjs';\nimport {retry,catchError} from 'rxjs/operators';\nimport { environment } from '../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductSearchService {\n\n  private headers = new HttpHeaders({});\n\n  constructor( private http: HttpClient) { \n   \n  }\n\n  getProductsByName(name:string):Observable<Product[]>{\n    let productSearchByNameUrl:string = environment.getProductsServiceUrl+\"/\"+name;\n    return this.http.get<Product[]>(productSearchByNameUrl,{\"headers\":this.headers}).pipe(retry(1),catchError(this.errorHandler));\n\n    \n  }\n\n  errorHandler(error: HttpErrorResponse){\n    alert(\"errorHandler error: \"+JSON.stringify(error));\n    let errorMsg = \"\";\n    if(error.message == \"\"){\n      errorMsg = \"Server Error\";\n\n    }else if(null != error.error.message && error.error.message != undefined){\n      errorMsg = error.error.message;\n    }else{\n      errorMsg = error.message;\n    }\n    alert(\"errorHandler errorMsg: \"+errorMsg);\n    return throwError(errorMsg);\n  }\n\n}\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { ProductSearchService } from '../product-search.service';\nimport { Product } from '../models/product';\n\n@Component({\n  //selector: 'app-product-search',\n  templateUrl: './product-search.component.html',\n  styleUrls: ['./product-search.component.css']\n})\nexport class ProductSearchComponent implements OnInit {\n\n  public errorMsg;\n  public rowData = [];\n  public selectedProducts = [];\n  clickMessage = '';\n  public productName = '';\n  public productModel = new Product();\n  public noresultsMatchingCriteriaMsg = '';\n  @Output() shoppingCartDisplayEventEmitter = new EventEmitter();\n  \n  constructor(private productSearchService: ProductSearchService) { }\n\n  ngOnInit(): void {\n    \n  }\n \n  productSearch() {\n   // alert(\"product name is: \"+this.productModel.name);\n    this.productName = this.productModel.name;\n    this.clickMessage = 'Wow binding!';\n    if(this.productName != '' && this.productName != undefined){\n     // alert('making ajax call');\n     this.productSearchService.getProductsByName(this.productName).subscribe(data => this.rowData = data,\n        error => this.errorMsg = error,() => {\n          if(this.rowData != null && this.rowData.length > 0){\n              //this.clickMessage = JSON.stringify(this.rowData[0]);\n          }else{\n            \n            this.noresultsMatchingCriteriaMsg = \"There are no products matching this name\";\n          }\n          \n        });\n    }\n    \n  }   \n\n  addToCart(){\n // alert(\"selected product details:\"+this.selectedProducts);\n  this.shoppingCartDisplayEventEmitter.emit(this.selectedProducts);\n  }\n\n  clearResults(){\n    this.noresultsMatchingCriteriaMsg = '';\n    this.rowData = [];\n    this.productModel.name='';\n    this.selectedProducts = [];\n  }\n\n  onCheckboxChange(e){\n    if (e.target.checked) {\n      //alert(e.target.value);\n      this.selectedProducts.push(e.target.value);\n    } else {\n      //alert(\"unchecked\");\n     //remove the selected product from the list\n     const prod = e.target.value;\n     const index = this.selectedProducts.findIndex(product => product.id === prod.id);\n     //alert(index);\n     this.selectedProducts.splice(index,1);\n    }\n    //alert(\"list:\"+JSON.stringify(this.selectedProducts));\n  }\n\n}\n","<div class=\"container-fluid\">\n    <form #productForm=\"ngForm\">\n\n        <div class=\"form-group\">\n            <label>Product Name:</label>\n            <input type=\"text\" class=\"form-control\" id=\"productName\" [(ngModel)]=\"productModel.name\" name=\"productName\"\n                #productName=\"ngModel\">\n\n        </div>\n        <div class=\"inlineDiv\">\n            <button class=\"btn btn-default\" type=\"button\" (click)=\"productSearch()\">Search</button>\n        </div>\n        \n    </form>\n</div>\n\n<div class=\"container-fluid\">\n    <h1>{{noresultsMatchingCriteriaMsg}}</h1>\n    <ul>\n        <li *ngFor=\"let product of rowData\">\n            <br/>\n            <span>\n            <label>\n                <input type=\"checkbox\" [value]=\"product\" (change)=\"onCheckboxChange($event)\" />\n                Select/unselect to add or remove item from cart:\n              </label>\n            </span>\n            <br/>\n          <!--   <span>Id: {{product.id}}</span><br> -->\n            <span>Name: {{product.name}}</span><br>\n            <span>Price: {{product.price}}$$</span><br>\n            <span>Seller: {{product.seller}}</span><br>\n            <span>Category: {{product.categoryName}}</span><br>\n            <!-- <span><img src=\"./assets/images/iphone-160307_1280.png\" alt=\"{{product.name}}\" style=\"width:250px;height:500px;\"></span><br> -->\n            <span><img src=\"{{product.imagePath}}\" alt=\"{{product.name}}\" style=\"width:250px;height:500px;\"></span><br>\n           \n           \n        </li>\n    </ul>\n    <span><button class=\"add-cart-button\" type=\"button\" (click)=\"addToCart()\">Add To Cart</button></span>\n</div>\n\n<div class=\"inlineDiv\">\n    <button class=\"btn btn-default\" type=\"button\" (click)=\"clearResults()\">Clear</button>\n</div>","export const environment = {\n  production: true,\n  serverUrl: 'http://localhost:8080/shopping',\n  getProductsServiceUrl:\"http://localhost:8080/shopping/products\"\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  serverUrl: 'http://localhost:8080/shopping',\n  getProductsServiceUrl:\"http://localhost:8080/shopping/products\",\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}